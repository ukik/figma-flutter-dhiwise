import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:yuvoria_s_application/core/utils/size_utils.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generatorif (!_supportedCustomColor.containsKey(_appTheme)){  throw Exception(               "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");      } //return theme from map
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator if (!_supportedColorScheme.containsKey(_appTheme)){   throw Exception(                "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");       }  //return theme from map
    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(5),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray70001,
          fontSize: 18.fSize,
          fontFamily: 'Circe',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray400,
          fontSize: 14.fSize,
          fontFamily: 'Circe',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray20001,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.blueA400,
          fontSize: 28.fSize,
          fontFamily: 'Merriweather',
          fontWeight: FontWeight.w400,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray800,
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray70001,
          fontSize: 18.fSize,
          fontFamily: 'Circe',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Blue
  Color get blue100 => Color(0XFFD0DEFC);
  Color get blueA100 => Color(0XFF8EAEF1);
  Color get blueA200 => Color(0XFF598DF9);
  Color get blueA400 => Color(0XFF3570EB);
  Color get blueA40099 => Color(0X993570EC);

  // BlueGray
  Color get blueGray200 => Color(0XFFAEB2C2);
  Color get blueGray20001 => Color(0XFFAEB3C2);
  Color get blueGray700 => Color(0XFF3B516E);
  Color get blueGray70001 => Color(0XFF4F5663);
  Color get blueGray800 => Color(0XFF2A4262);
  Color get blueGray900 => Color(0XFF222B45);

  // DeepOrange
  Color get deepOrange50 => Color(0XFFF7E6E6);

  // Gray
  Color get gray100 => Color(0XFFFCF4F5);
  Color get gray400 => Color(0XFFD6BCCA);
  Color get gray50 => Color(0XFFF8FAFE);
  Color get gray700 => Color(0XFF6A515E);

  // Indigo
  Color get indigo200 => Color(0XFF9CB1D8);
  Color get indigo300 => Color(0XFF878EDE);

  // IndigoB
  Color get indigo50B5 => Color(0XB5E7EDFA);

  // LightBlue
  Color get lightBlue50 => Color(0XFFE5F7FF);

  // Purple
  Color get purpleA200 => Color(0XFFD25DFA);
  Color get purpleA20001 => Color(0XFFD959F9);
  Color get purpleA20099 => Color(0X99DA5AFA);

  // Red
  Color get redA700 => Color(0XFFFF0000);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
